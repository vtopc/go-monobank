package monobank

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

var testAccount = Account{
	ID:           "-An7eZ",
	CurrencyCode: 980,
	CashbackType: "UAH",
	Balance:      1743827,
	CreditLimit:  1000000,
}

func TestAccount_String(t *testing.T) {
	tests := []struct {
		name    string
		account Account
		want    string
	}{
		{
			name:    "UAH",
			account: testAccount,
			want: `Account: -An7eZ
–í–∞–ª—é—Ç–∞: UAH
–ë–∞–ª–∞–Ω—Å(—á–∏—Å—Ç–∏–π): 7438.27 UAH
–ë–∞–ª–∞–Ω—Å(–∑ –∫—Ä–µ–¥–∏—Ç–Ω–∏–º –ª—ñ–º—ñ—Ç–æ–º): 17438.27 UAH
–ö—Ä–µ–¥–∏—Ç–Ω–∏–π –ª—ñ–º—ñ—Ç: 10000.00 UAH
`,
		},
		// TODO: Add test cases.
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := tt.account.String()
			assert.Equal(t, tt.want, got)
		})
	}
}

func TestClientInfo_String(t *testing.T) {
	tests := []struct {
		name string
		c    ClientInfo
		want string
	}{
		{
			c: ClientInfo{
				Name: "Will",
				Accounts: []Account{
					testAccount,
				},
			},
			want: `–Ü'–º—è: Will
üî∏üî∏üî∏
Account: -An7eZ
–í–∞–ª—é—Ç–∞: UAH
–ë–∞–ª–∞–Ω—Å(—á–∏—Å—Ç–∏–π): 7438.27 UAH
–ë–∞–ª–∞–Ω—Å(–∑ –∫—Ä–µ–¥–∏—Ç–Ω–∏–º –ª—ñ–º—ñ—Ç–æ–º): 17438.27 UAH
–ö—Ä–µ–¥–∏—Ç–Ω–∏–π –ª—ñ–º—ñ—Ç: 10000.00 UAH
`,
		},
		// TODO: Add test cases.
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			got := tt.c.String()
			assert.Equal(t, tt.want, got)
		})
	}
}
